package uk.gov.companieshouse.acsp.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import uk.gov.companieshouse.acsp.Exception.ServiceException;
import uk.gov.companieshouse.acsp.sdk.ApiClientService;
import uk.gov.companieshouse.api.error.ApiErrorResponseException;
import uk.gov.companieshouse.api.handler.exception.URIValidationException;
import uk.gov.companieshouse.api.handler.payment.request.PaymentCreate;
import uk.gov.companieshouse.api.model.ApiResponse;
import uk.gov.companieshouse.api.model.payment.PaymentApi;
import uk.gov.companieshouse.api.model.payment.PaymentSessionApi;
import uk.gov.companieshouse.api.model.transaction.Transaction;
import uk.gov.companieshouse.environment.EnvironmentReader;
import uk.gov.companieshouse.environment.impl.EnvironmentReaderImpl;


import java.io.IOException;
import java.util.UUID;

@Service
public class PaymentsService {
    private final ApiClientService apiClientService;

    @Autowired
    public PaymentsService(ApiClientService apiClientService) {
        this.apiClientService = apiClientService;
    }

    private static EnvironmentReader environmentReader = new EnvironmentReaderImpl();

    public PaymentApi createPaymentSession(String passThroughHeader, Transaction transaction) throws ServiceException {
        //below is the dummy body, Note that resource should be the payment link generated by transactcion api
        String state = UUID.randomUUID().toString();
        PaymentSessionApi paymentSessionApi = new PaymentSessionApi();
        paymentSessionApi.setRedirectUri(environmentReader.getMandatoryString("CHS_URL") + "/transactions/117524-754816-491724/payment/10000025/confirmation");
        paymentSessionApi.setReference("acsp_api_" +  "12345");
        paymentSessionApi.setResource(environmentReader.getMandatoryString("API_URL") + transaction.getLinks().getPayment());
        paymentSessionApi.setState(state);

        PaymentCreate paymentCreate = null;

        try {
            paymentCreate = apiClientService.getApiClient(passThroughHeader).payment().create("/payments", paymentSessionApi);
        } catch (IOException e) {
            throw new ServiceException("Error creating payment session", e);
        }

        ApiResponse<PaymentApi> paymentsAPI = null;

        try {
            paymentsAPI = paymentCreate.execute();
            return paymentsAPI.getData();
        } catch (URIValidationException | ApiErrorResponseException e){
            throw new ServiceException("Error getting payment response", e);
        }
    }
}
